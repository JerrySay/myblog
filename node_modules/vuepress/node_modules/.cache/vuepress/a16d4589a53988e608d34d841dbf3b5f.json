{"remainingRequest":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/myblog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/myblog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/myblog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/myblog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/myblog/docs/springcloud/README.md?vue&type=template&id=7506a872&","dependencies":[{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/myblog/docs/springcloud/README.md","mtime":1550048274529},{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/myblog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/myblog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/myblog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/myblog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/myblog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"content\" }, [\n    _vm._m(0),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _vm._v(\n        \"Spring Cloud是一系列框架的有序集合。它利用Spring Boot的开发便利性巧妙地简化了分布式系统基础设施的开发，如服务发现注册、配置中心、消息总线、负载均衡、断路器、数据监控等，都可以用Spring Boot的开发风格做到一键启动和部署。\"\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(1),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"SpringCloud相关组件\")]),\n    _vm._v(\" \"),\n    _vm._m(2),\n    _vm._v(\" \"),\n    _vm._m(3),\n    _vm._v(\" \"),\n    _vm._m(4),\n    _vm._v(\" \"),\n    _c(\"p\", [\n      _c(\n        \"a\",\n        {\n          attrs: {\n            href: \"http://www.springcloud.cn/view/415\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\"\n          }\n        },\n        [_vm._v(\"原文章\"), _c(\"OutboundLink\")],\n        1\n      )\n    ]),\n    _vm._v(\" \"),\n    _vm._m(5),\n    _vm._v(\" \"),\n    _vm._m(6),\n    _vm._v(\" \"),\n    _vm._m(7),\n    _vm._v(\" \"),\n    _c(\"p\", [_vm._v(\"Spring Cloud第一代和第二代的组件组合汇总，如下表所示。\")]),\n    _vm._v(\" \"),\n    _vm._m(8),\n    _vm._v(\" \"),\n    _vm._m(9),\n    _vm._v(\" \"),\n    _vm._m(10),\n    _vm._v(\" \"),\n    _vm._m(11),\n    _vm._v(\" \"),\n    _c(\"hr\"),\n    _vm._v(\" \"),\n    _vm._m(12)\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"springcloud介绍\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#springcloud介绍\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" SpringCloud介绍\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"springcloud组件\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#springcloud组件\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" SpringCloud组件\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Eureka：一个基于rest服务的服务治理组件，包括服务注册中心、服务注册与服务发现机制的实现，实现了云端负载均衡和中间层服务器的故障转移。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Hystrix：容错管理工具，实现断路器模式，通过控制服务的节点,从而对延迟和故障提供更强大的容错能力。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Ribbon：客户端负载均衡的服务调用组件。提供云端负载均衡，有多种负载均衡策略可供选择，可配合服务发现和断路器使用。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Feign：基于Ribbon和Hystrix的声明式服务调用组件。Feign是一种声明式、模板化的HTTP客户端。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Zuul：云平台上提供动态路由,监控,弹性,安全等边缘服务的框架。相当于是设备和 Netflix 流应用的 Web 网站后端所有请求的前门。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Turbine：Turbine是聚合服务器发送事件流数据的一个工具，用来监控集群下hystrix的metrics情况。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Netflix Archaius：配置管理API，包含一系列配置管理API，提供动态类型化属性、线程安全配置操作、轮询框架、回调机制等功能。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Config： 配置管理工具包，让你可以把配置放到远程服务器，几种化管理集群配置，目前支持本地存储，Git以及Subversion。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Bus：消息总线(一种通信工具，可以在机器之间互相传输消息、文件等。消息总线扮演着一种消息路由的角色，拥有一套完备的路由机制来决定消息传输方向。发送段只需要向消息总线发出消息而不用管消息被如何转发)\"\n        ),\n        _c(\"br\"),\n        _vm._v(\n          \"\\n通过轻量消息代理连接各个分布的节点。管理和传播所有分布式项目中的消息，本质是利用了MQ的广播机制在分布式的系统中传播消息，用于在集群（例如，配置变化事件）中传播状态变化，可与Spring Cloud Config联合实现热部署。\"\n        ),\n        _c(\"br\"),\n        _vm._v(\"\\n目前常用的有Kafka和RabbitMQ。\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"RabbitMQ官网地址：http://www.rabbitmq.com/\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"Kafka官网地址：http://kafka.apache.org/\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Consul：由HashiCorp公司开发，是一个服务发现与配置工具，与Docker容器可以无缝集成。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"hashicorp官网地址：https://www.hashicorp.com/\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"Consul官网地址：https://www.consul.io/\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Zookeeper：操作Zookeeper的工具包，用于使用zookeeper方式的服务发现和配置管理。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"Zookeeper官网地址：https://zookeeper.apache.org/\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Security：基于spring security的安全工具包，为你的应用程序添加安全控制。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Stream：数据流操作开发包，封装了与Redis,RabbitMQ、Kafka等发送接收消息。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Sleuth：日志收集工具包，封装了Dapper和log-based追踪以及Zipkin和HTrace操作，为SpringCloud应用实现了一种分布式追踪解决方案。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Data Flow：大数据操作工具，作为Spring XD的替代产品，它是一个混合计算模型，结合了流数据与批量数据的处理方式。是构建数据集成和实时数据处理流水线的工具包。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"Spring Cloud Task：提供云端计划任务管理、任务调度。\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Connectors：便于云端应用程序在各种PaaS平台连接到后端，如：数据库和消息代理服务。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud Cluster：提供Leadership选举，如：Zookeeper, Redis, Hazelcast, Consul等常见状态模式的抽象和实现。\"\n        ),\n        _c(\"br\"),\n        _vm._v(\n          \"\\n Hazelcast 是由Hazelcast公司开发和维护的开源产品，可以为基于jvm环境运行的各种应用提供分布式集群和分布式缓存服务。\"\n        )\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_vm._v(\"Hazelcast官网地址：https://hazelcast.com/\")]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud for Cloud Foundry：将您的应用程序与Pivotal Cloudfoundry集成。 提供服务发现实现，并且还可以轻松实现SSO和OAuth2保护的资源,还可以创建Cloudfoundry服务代理。CloudFoundry是VMware推出的开源PaaS云平台。\"\n        ),\n        _c(\"br\"),\n        _vm._v(\"\\nCloudFoundry官网地址：https://www.cloudfoundry.org/\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _vm._v(\n          \"Spring Cloud CLI：基于 Spring Boot CLI，可以让你以命令行方式快速建立云组件。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _c(\"img\", {\n        attrs: {\n          src:\n            \"https://www.lijiating.online/myblog/images/springcloud-zujian.png\",\n          alt: \"微服务技术\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"springcloud发展\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#springcloud发展\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" SpringCloud发展\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"springcloud第一代\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#springcloud第一代\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" SpringCloud第一代\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\", [_vm._v(\"组件\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"来源\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"说明\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"组件\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"Spring-cloud-openfeign\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"基于Feign的升级\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"服务之间调用的必备组件\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Spring-cloud-openfeign\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"spring-cloud-zuul\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"来源于Netflix Zuul\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\n              \"目前还在继续维护，但是已经有自己的Spring Cloud Gateway,不久将来逐渐淘汰\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"spring-cloud-zuul\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"spring-cloud-eureka\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"集成于Netflix Eureka\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"目前还在跟随Spring Cloud版本升级维护，最终也会被替代\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"spring-cloud-eureka\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"spring-cloud-config\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"自研\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\"功能不足，国内使用其它配置中心替代，比如携程的Apollo\")\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"spring-cloud-config\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"全链路监控(sleuth+zikpin或pinpont)\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"sleuth自研，其它第三方\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"国内目前使用最多的是skywaling等上生产\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"全链路监控(sleuth+zikpin或pinpont)\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"spring-cloud-ribbon\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"来源于Netflix集成\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\n              \"ribbon目前还在跟随Spring Cloud版本维护中，目前孵化未来替代品spring-cloud-lb\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"spring-cloud-ribbon\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"Spring-cloud-hystrix\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"来源于Netflix集成\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [\n            _vm._v(\n              \"目前还在跟随Spring Cloud版本维护中目前已经孵化spring-cloud-r4j\"\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Spring-cloud-hystrix\")])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h3\", { attrs: { id: \"springcloud-第二代\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#springcloud-第二代\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" SpringCloud 第二代\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"table\", [\n      _c(\"thead\", [\n        _c(\"tr\", [\n          _c(\"th\"),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"Spring Cloud第一代\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"Spring Cloud第二代\")]),\n          _vm._v(\" \"),\n          _c(\"th\", [_vm._v(\"组件\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"tbody\", [\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"网关\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Spring Cloud Zuul\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Spring Cloud Gateway\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Spring-cloud-openfeign\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"注册中心\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"eureka(不再更新)，Consul,ZK\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"阿里Nacos，拍拍贷radar等可选\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"spring-cloud-zuul\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"配置中心\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"spring cloud config\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"阿里Nacos，携程Apollo，随行付Config Keeper\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"spring-cloud-eureka\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"客户端软负载均衡\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Ribbon\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"spring-cloud-loadbalancer\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"spring-cloud-config\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"熔断器\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Hystrix\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"spring-cloud-r4j(Resilience4J)，阿里Sentinel\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"全链路监控(sleuth+zikpin或pinpont)\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\"),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Spring Cloud第一代\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Spring Cloud第二代\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"spring-cloud-ribbon\")])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tr\", [\n          _c(\"td\", [_vm._v(\"网关\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Spring Cloud Zuul\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Spring Cloud Gateway\")]),\n          _vm._v(\" \"),\n          _c(\"td\", [_vm._v(\"Spring-cloud-hystrix\")])\n        ])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"warning custom-block\" }, [\n      _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"说明\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"以为内置均从网上资料查找借鉴，后续会陆续进行更新，如有侵权，可联系本人。\"\n        )\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"h2\", { attrs: { id: \"springcloud开源推荐\" } }, [\n      _c(\n        \"a\",\n        {\n          staticClass: \"header-anchor\",\n          attrs: { href: \"#springcloud开源推荐\", \"aria-hidden\": \"true\" }\n        },\n        [_vm._v(\"#\")]\n      ),\n      _vm._v(\" SpringCloud开源推荐\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", [\n      _c(\"li\", [_c(\"p\", [_vm._v(\"https://github.com/alibaba/Sentinel\")])]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"https://github.com/spring-cloud-incubator/spring-cloud-r4j\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"阿里Nacos-https://github.com/alibaba/nacos\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [\n          _vm._v(\"随行付Config-keeper-https://github.com/sxfad/config-keeper\")\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"li\", [_c(\"p\", [_vm._v(\"spring-cloud-loadbalancer\")])]),\n      _vm._v(\" \"),\n      _c(\"li\", [_c(\"p\", [_vm._v(\"https://github.com/ctripcorp/apollo\")])]),\n      _vm._v(\" \"),\n      _c(\"li\", [\n        _c(\"p\", [_vm._v(\"https://github.com/apache/incubator-skywalking\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [_c(\"code\", [_vm._v(\"谢谢\")])])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}