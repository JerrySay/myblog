(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{227:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("blockquote",[a("p",[e._v("看本文之前如果你没有安装 ZooKeeper 的话，可以参考这篇文章："),a("a",{attrs:{href:"https://github.com/Snailclimb/springboot-integration-examples/blob/master/md/springboot-dubbo.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("《使用 SpringBoot+Dubbo 搭建一个简单分布式服务》"),a("OutboundLink")],1),e._v(" 的 “开始实战 1 ：zookeeper 环境安装搭建” 这部分进行安装（Centos7.4 环境下）。如果你想对 ZooKeeper 有一个整体了解的话，可以参考这篇文章："),a("a",{attrs:{href:"https://github.com/Snailclimb/JavaGuide/blob/master/%E4%B8%BB%E6%B5%81%E6%A1%86%E6%9E%B6/ZooKeeper.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("《可能是把 ZooKeeper 概念讲的最清楚的一篇文章》"),a("OutboundLink")],1)])]),e._v(" "),e._m(1),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),a("p",[e._v("每个 ZNode 由2部分组成:")]),e._v(" "),e._m(6),e._v(" "),a("p",[e._v("如下所示，我通过 get 命令来获取 根目录下的 dubbo 节点的内容。（get 命令在下面会介绍到）")]),e._v(" "),e._m(7),a("p",[e._v("这些状态信息其实就是 Stat 对象的格式化输出。Stat 类中包含了一个数据节点的所有状态信息的字段，包括事务ID、版本信息和子节点个数等，如下图所示（图源：《从Paxos到Zookeeper  分布式一致性原理与实践》，下面会介绍通过 stat 命令查看数据节点的状态）。")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),a("p",[e._v("关于数据节点的状态信息说明（也就是对Stat 类中的各字段进行说明），可以参考下图（图源：《从Paxos到Zookeeper  分布式一致性原理与实践》）。")]),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),e._m(12),e._v(" "),a("p",[e._v("进入安装 ZooKeeper文件夹的 bin 目录下执行下面的命令连接 ZooKeeper 服务（Linux环境下）（连接之前首选要确定你的 ZooKeeper 服务已经启动成功）。")]),e._v(" "),e._m(13),e._m(14),e._v(" "),a("p",[e._v("从上图可以看出控制台打印出了很多信息，包括我们的主机名称、JDK 版本、操作系统等等。如果你成功看到这些信息，说明你成功连接到  ZooKeeper 服务。")]),e._v(" "),e._m(15),e._v(" "),a("p",[e._v("help 命令查看 zookeeper 常用命令")]),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),a("p",[e._v('通过 create 命令在根目录创建了node1节点，与它关联的字符串是"node1"')]),e._v(" "),e._m(18),a("p",[e._v("通过 create 命令在根目录创建了node1节点，与它关联的内容是数字 123")]),e._v(" "),e._m(19),e._m(20),e._v(" "),e._m(21),e._m(22),e._v(" "),a("p",[e._v('get 命令可以获取指定节点的数据内容和节点的状态,可以看出我们通过set 命令已经将节点数据内容改为 "set node1"。')]),e._v(" "),e._m(23),e._m(24),e._v(" "),a("p",[e._v("通过 ls 命令查看根目录下的节点")]),e._v(" "),e._m(25),a("p",[e._v("通过 ls 命令查看 node1 目录下的节点")]),e._v(" "),e._m(26),a("p",[e._v("zookeeper 中的 ls 命令和 linux 命令中的 ls 类似， 这个命令将列出绝对路径path下的所有子节点信息（列出1级，并不递归）")]),e._v(" "),e._m(27),e._v(" "),a("p",[e._v("通过 stat 命令查看节点状态")]),e._v(" "),e._m(28),a("p",[e._v("上面显示的一些信息比如cversion、aclVersion、numChildren等等，我在上面 “ZNode(数据节点)的结构” 这部分已经介绍到。")]),e._v(" "),e._m(29),e._v(" "),a("p",[e._v("ls2 命令更像是 ls 命令和 stat 命令的结合。ls2 命令返回的信息包括2部分：子节点列表 + 当前节点的stat信息。")]),e._v(" "),e._m(30),e._m(31),e._v(" "),a("p",[e._v("这个命令很简单，但是需要注意的一点是如果你要删除某一个节点，那么这个节点必须无子节点才行。")]),e._v(" "),e._m(32),a("p",[e._v("在后面我会介绍到 Java 客户端 API的使用以及开源 Zookeeper 客户端 ZkClient 和 Curator 的使用。")]),e._v(" "),e._m(33),e._v(" "),e._m(34)])},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ul",[a("li",[a("a",{attrs:{href:"#zookeeper-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B"}},[e._v("ZooKeeper 数据模型")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#znode%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9%E7%9A%84%E7%BB%93%E6%9E%84"}},[e._v("ZNode(数据节点)的结构")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E6%B5%8B%E8%AF%95-zookeeper-%E4%B8%AD%E7%9A%84%E5%B8%B8%E8%A7%81%E6%93%8D%E4%BD%9C"}},[e._v("测试 ZooKeeper 中的常见操作")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E8%BF%9E%E6%8E%A5-zookeeper-%E6%9C%8D%E5%8A%A1"}},[e._v("连接 ZooKeeper 服务")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E6%9F%A5%E7%9C%8B%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4help-%E5%91%BD%E4%BB%A4"}},[e._v("查看常用命令(help 命令)")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E5%88%9B%E5%BB%BA%E8%8A%82%E7%82%B9create-%E5%91%BD%E4%BB%A4"}},[e._v("创建节点(create 命令)")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E6%9B%B4%E6%96%B0%E8%8A%82%E7%82%B9%E6%95%B0%E6%8D%AE%E5%86%85%E5%AE%B9set-%E5%91%BD%E4%BB%A4"}},[e._v("更新节点数据内容(set 命令)")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E8%8E%B7%E5%8F%96%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E6%8D%AEget-%E5%91%BD%E4%BB%A4"}},[e._v("获取节点的数据(get 命令)")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E6%9F%A5%E7%9C%8B%E6%9F%90%E4%B8%AA%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E5%AD%90%E8%8A%82%E7%82%B9ls-%E5%91%BD%E4%BB%A4"}},[e._v("查看某个目录下的子节点(ls 命令)")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E6%9F%A5%E7%9C%8B%E8%8A%82%E7%82%B9%E7%8A%B6%E6%80%81stat-%E5%91%BD%E4%BB%A4"}},[e._v("查看节点状态(stat 命令)")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E6%9F%A5%E7%9C%8B%E8%8A%82%E7%82%B9%E4%BF%A1%E6%81%AF%E5%92%8C%E7%8A%B6%E6%80%81ls2-%E5%91%BD%E4%BB%A4"}},[e._v("查看节点信息和状态(ls2 命令)")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E5%88%A0%E9%99%A4%E8%8A%82%E7%82%B9delete-%E5%91%BD%E4%BB%A4"}},[e._v("删除节点(delete 命令)")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8F%82%E8%80%83"}},[e._v("参考")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"zookeeper-数据模型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper-数据模型","aria-hidden":"true"}},[this._v("#")]),this._v(" ZooKeeper 数据模型")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v('ZNode（数据节点）是 ZooKeeper 中数据的最小单元，每个ZNode上都可以保存数据，同时还是可以有子节点（这就像树结构一样，如下图所示）。可以看出，节点路径标识方式和Unix文件\n系统路径非常相似，都是由一系列使用斜杠"/"进行分割的路径表示，开发人员可以向这个节点中写人数据，也可以在节点下面创建子节点。这些操作我们后面都会介绍到。\n'),t("img",{attrs:{src:"https://images.gitbook.cn/95a192b0-1c56-11e9-9a8e-f3b01b1ea9aa",alt:"ZooKeeper 数据模型"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("提到 ZooKeeper 数据模型，还有一个不得不得提的东西就是 "),t("strong",[this._v("事务 ID")]),this._v(" 。事务的ACID（Atomic：原子性；Consistency:一致性；Isolation：隔离性；Durability：持久性）四大特性我在这里就不多说了，相信大家也已经挺腻了。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("在Zookeeper中，事务是指能够改变 ZooKeeper 服务器状态的操作，我们也称之为事务操作或更新操作，一般包括数据节点创建与删除、数据节点内容更新和客户端会话创建与失效等操作。对于每一个事务请求，"),t("strong",[this._v("ZooKeeper 都会为其分配一个全局唯一的事务ID,用 ZXID 来表示")]),this._v("，通常是一个64位的数字。每一个ZXID对应一次更新操作，"),t("strong",[this._v("从这些 ZXID 中可以间接地识别出Zookeeper处理这些更新操作请求的全局顺序")]),this._v("。")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"znode-数据节点-的结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#znode-数据节点-的结构","aria-hidden":"true"}},[this._v("#")]),this._v(" ZNode(数据节点)的结构")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("stat：状态信息")]),this._v(" "),t("li",[this._v("data：数据内容")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[zk: 127.0.0.1:2181(CONNECTED) 6] get /dubbo    \n# 该数据节点关联的数据内容为空\nnull\n# 下面是该数据节点的一些状态信息，其实就是 Stat 对象的格式化输出\ncZxid = 0x2\nctime = Tue Nov 27 11:05:34 CST 2018\nmZxid = 0x2\nmtime = Tue Nov 27 11:05:34 CST 2018\npZxid = 0x3\ncversion = 1\ndataVersion = 0\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 0\nnumChildren = 1\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("strong",[this._v("Stat 类：")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://images.gitbook.cn/a841e740-1c55-11e9-b5b7-abf0ec0c666a",alt:"Stat 类"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://images.gitbook.cn/f44d8630-1c55-11e9-b5b7-abf0ec0c666a",alt:"数据节点的状态信息说明"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"测试-zookeeper-中的常见操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试-zookeeper-中的常见操作","aria-hidden":"true"}},[this._v("#")]),this._v(" 测试 ZooKeeper 中的常见操作")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"连接-zookeeper-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接-zookeeper-服务","aria-hidden":"true"}},[this._v("#")]),this._v(" 连接 ZooKeeper 服务")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("./zkCli.sh -server 127.0.0.1:2181\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://images.gitbook.cn/153b84c0-1c59-11e9-9a8e-f3b01b1ea9aa",alt:"连接 ZooKeeper 服务"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"查看常用命令-help-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看常用命令-help-命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 查看常用命令(help 命令)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("img",{attrs:{src:"https://images.gitbook.cn/091db640-1c59-11e9-b5b7-abf0ec0c666a",alt:"help 命令"}})])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"创建节点-create-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建节点-create-命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 创建节点(create 命令)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[zk: 127.0.0.1:2181(CONNECTED) 34] create /node1 “node1”\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[zk: 127.0.0.1:2181(CONNECTED) 1] create /node1/node1.1 123\nCreated /node1/node1.1\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"更新节点数据内容-set-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#更新节点数据内容-set-命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 更新节点数据内容(set 命令)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('[zk: 127.0.0.1:2181(CONNECTED) 11] set /node1 "set node1" \n')])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"获取节点的数据-get-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#获取节点的数据-get-命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 获取节点的数据(get 命令)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("set node1\ncZxid = 0x47\nctime = Sun Jan 20 10:22:59 CST 2019\nmZxid = 0x4b\nmtime = Sun Jan 20 10:41:10 CST 2019\npZxid = 0x4a\ncversion = 1\ndataVersion = 1\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 9\nnumChildren = 1\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"查看某个目录下的子节点-ls-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看某个目录下的子节点-ls-命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 查看某个目录下的子节点(ls 命令)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[zk: 127.0.0.1:2181(CONNECTED) 37] ls /\n[dubbo, zookeeper, node1]\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[zk: 127.0.0.1:2181(CONNECTED) 5] ls /node1\n[node1.1]\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"查看节点状态-stat-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看节点状态-stat-命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 查看节点状态(stat 命令)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[zk: 127.0.0.1:2181(CONNECTED) 10] stat /node1\ncZxid = 0x47\nctime = Sun Jan 20 10:22:59 CST 2019\nmZxid = 0x47\nmtime = Sun Jan 20 10:22:59 CST 2019\npZxid = 0x4a\ncversion = 1\ndataVersion = 0\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 11\nnumChildren = 1\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"查看节点信息和状态-ls2-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看节点信息和状态-ls2-命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 查看节点信息和状态(ls2 命令)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[zk: 127.0.0.1:2181(CONNECTED) 7] ls2 /node1\n[node1.1]\ncZxid = 0x47\nctime = Sun Jan 20 10:22:59 CST 2019\nmZxid = 0x47\nmtime = Sun Jan 20 10:22:59 CST 2019\npZxid = 0x4a\ncversion = 1\ndataVersion = 0\naclVersion = 0\nephemeralOwner = 0x0\ndataLength = 11\nnumChildren = 1\n\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"删除节点-delete-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除节点-delete-命令","aria-hidden":"true"}},[this._v("#")]),this._v(" 删除节点(delete 命令)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v("[zk: 127.0.0.1:2181(CONNECTED) 3] delete /node1/node1.1\n")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[this._v("#")]),this._v(" 参考")])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[this._v("《从Paxos到Zookeeper  分布式一致性原理与实践》")])])}],!1,null,null,null);t.default=r.exports}}]);