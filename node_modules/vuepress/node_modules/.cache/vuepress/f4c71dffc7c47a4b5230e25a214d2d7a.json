{"remainingRequest":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/vuepressBlog/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/vuepressBlog/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/vuepressBlog/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/vuepressBlog/node_modules/vuepress/lib/webpack/markdownLoader.js??ref--1-2!/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/vuepressBlog/docs/blog/node-study.md?vue&type=template&id=1b6feb38&","dependencies":[{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/vuepressBlog/docs/blog/node-study.md","mtime":1549463072833},{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/vuepressBlog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/vuepressBlog/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/vuepressBlog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/vuepressBlog/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jerry/Development/WEB/webWorkSpace/LIJIATING/vuepressBlog/node_modules/vuepress/lib/webpack/markdownLoader.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm._m(0)\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"content\" }, [\n      _c(\"p\", [_vm._v(\"总结一些 Node 的学习笔记。。。\\n\")]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_1-请求头中content-type的常用类型\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#_1-请求头中content-type的常用类型\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 1. 请求头中Content-Type的常用类型\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\n            \"在http协议消息头中，使用Content-Type来表示具体请求中的媒体类型信息。\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"常见的媒体格式类型如下：\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#常见的媒体格式类型如下：\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 常见的媒体格式类型如下：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"text/html  ( HTML格式)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"text/plain  (纯文本格式  )\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"text/xml  (  XML格式)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"image/gif  (gif图片格式)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"image/jpeg  (jpg图片格式)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"image/png (png图片格式)\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h3\", { attrs: { id: \"以application开头的媒体格式类型：\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: {\n              href: \"#以application开头的媒体格式类型：\",\n              \"aria-hidden\": \"true\"\n            }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 以application开头的媒体格式类型：\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"application/xhtml+xml      (XHTML格式)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"application/xml            (XML数据格式)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"application/atom+xml       (Atom XML聚合格式)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"application/json           (JSON数据格式)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"application/pdf            (pdf格式)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"application/msword         (Word文档格式)\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"application/octet-stream   （二进制流数据如常见的文件下载）\")\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"application/x-www-form-urlencoded  （表单默认的提交数据的格式）\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"h3\",\n        { attrs: { id: \"另外一种常见的媒体格式是上传文件之时使用的：\" } },\n        [\n          _c(\n            \"a\",\n            {\n              staticClass: \"header-anchor\",\n              attrs: {\n                href: \"#另外一种常见的媒体格式是上传文件之时使用的：\",\n                \"aria-hidden\": \"true\"\n              }\n            },\n            [_vm._v(\"#\")]\n          ),\n          _vm._v(\" 另外一种常见的媒体格式是上传文件之时使用的：\")\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _vm._v(\n            \"multipart/form-data  (需要在表单中进行文件上传时，就需要使用该格式)\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_2-创建子进程的方法\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_2-创建子进程的方法\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 2. 创建子进程的方法\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\n            \"child_process模块给予node可以随意创建子进程的能力，它提供了四个方法用于创建子进程。\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"spawn() : 启动一个子进程来执行命令；\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"exec() : 启动一个子进程来执行命令，与spawn不同的是其接口不同，它有一个回调函数获取子进程的状况；\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"execFile() : 启动一个子进程来执行可执行文件；\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"fork() : 与spawn类似，不同点在于它创建的子进程只需要指定要执行的JavaScript文件模块即可；\"\n          )\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n          _c(\"code\", [\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"var\")\n            ]),\n            _vm._v(\" cp \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"require\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'child_process'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\ncp\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"spawn\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'node'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"[\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'work.js'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"]\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\ncp\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"exec\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'node work.js'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"err\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" stdout\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" stderr\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// doSomeThing\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\ncp\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"execFile\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'work.js'\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"function\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"err\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" stdout\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" stderr\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token comment\" } }, [\n              _vm._v(\"// doSomeThing\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\ncp\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"fork\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'./work.js'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\";\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"warning custom-block\" }, [\n        _c(\"p\", { staticClass: \"custom-block-title\" }, [_vm._v(\"差异：\")]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"spawn与exec/execFile不同的是，后两者创建时可以指定timeout属性设置超时时间，一旦创建的进程运行超过设定时间将会被杀死；\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"exec与execFile不同的是，exec适合执行已有的指令，execFile适合执行文件；\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"p\", [\n          _vm._v(\n            \"这里的可执行文件是指可以直接执行的文件，如果是JavaScript文件通过execFile()运行时，它的首行内容必须添加如下代码：\\n\"\n          ),\n          _c(\"strong\", [_vm._v(\"#!/usr/bin/env node\")])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"类型\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"th\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"回调\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"th\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"进程类型\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"th\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"执行类型\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"th\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"可设置超时\")\n            ])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"spawn\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"❌\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"任意\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"命令\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"❌\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"exec\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"✅\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"任意\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"命令\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"✅\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"execFile\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"✅\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"任意\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"可执行文件\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"✅\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"spawn\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"❌\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"Node\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"JavaScript文件\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"❌\")\n            ])\n          ])\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"_3-写入文件\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#_3-写入文件\", \"aria-hidden\": \"true\" }\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 3. 写入文件\")\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [_vm._v(\"fs.writeFile(file, data[, options], callback)\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"参数说明：\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"file - 文件名或文件描述符\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"data - 要写入文件的数据，可以是 String(字符串) 或 Buffer(流) 对象\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"options - 该参数是一个对象，包含 {encoding, mode, flag}。默认编码为 utf8, 模式为 0666 ， flag 为 'w'，*如果是一个字符串，则它指定了字符编码\"\n          )\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"callback - 回调函数\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"以追加模式往README.me写入字符串Hello Node.js\")])\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"language-js extra-class\" }, [\n        _c(\"pre\", { pre: true, attrs: { class: \"language-js\" } }, [\n          _c(\"code\", [\n            _vm._v(\"fs\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"writeFile\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'README.md'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'Hello Node.js'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"flag\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\":\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'a+'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\",\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"err\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token operator\" } }, [\n              _vm._v(\"=>\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"{\")\n            ]),\n            _vm._v(\"\\n  \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"if\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _vm._v(\"err\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"span\", { pre: true, attrs: { class: \"token keyword\" } }, [\n              _vm._v(\"throw\")\n            ]),\n            _vm._v(\" err\\n  console\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\".\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token function\" } }, [\n              _vm._v(\"log\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"(\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token string\" } }, [\n              _vm._v(\"'It\\\\'s saved!'\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\"),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\"}\")\n            ]),\n            _c(\"span\", { pre: true, attrs: { class: \"token punctuation\" } }, [\n              _vm._v(\")\")\n            ]),\n            _vm._v(\"\\n\")\n          ])\n        ])\n      ]),\n      _c(\"p\", [_vm._v(\"这里我们介绍下flags ：\")]),\n      _vm._v(\" \"),\n      _c(\"table\", [\n        _c(\"thead\", [\n          _c(\"tr\", [\n            _c(\"th\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"Flag\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"th\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"描述\")\n            ])\n          ])\n        ]),\n        _vm._v(\" \"),\n        _c(\"tbody\", [\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"r\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"以读取模式打开文件。如果文件不存在抛出异常。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"r+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"以读写模式打开文件。如果文件不存在抛出异常。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"rs\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"以同步的方式读取文件。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"rs+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"以同步的方式读取和写入文件。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"w\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"以写入模式打开文件，如果文件不存在则创建。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"wx\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"类似 'w'，但是如果文件路径存在，则文件写入失败。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"w+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"以读写模式打开文件，如果文件不存在则创建。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"wx+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"类似 'w+'， 但是如果文件路径存在，则文件读写失败。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"a\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"以追加模式打开文件，如果文件不存在则创建。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"ax\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"类似 'a'， 但是如果文件路径存在，则文件追加失败。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"a+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"以读取追加模式打开文件，如果文件不存在则创建。\")\n            ])\n          ]),\n          _vm._v(\" \"),\n          _c(\"tr\", [\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"ax+\")\n            ]),\n            _vm._v(\" \"),\n            _c(\"td\", { staticStyle: { \"text-align\": \"center\" } }, [\n              _vm._v(\"类似 'a+'， 但是如果文件路径存在，则文件读取追加失败。\")\n            ])\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}